name: 🚀 CD - Deploy to EC2 (Git Clone)

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: 🚀 Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: 🔐 Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: 🚀 Deploy to EC2
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Repository dizini kontrolü ve kurulumu
            if [ ! -d "~/fotomandalin" ]; then
              echo "📂 Cloning repository..."
              git clone https://github.com/karadenizemirr/fotomandalin.git ~/fotomandalin
            fi
            
            cd ~/fotomandalin
            
            echo "📥 Pulling latest changes..."
            git pull origin main
            
            echo "🔧 Creating environment file..."
            cat > .env.production << EOL
            # Database
            DATABASE_URL=postgresql://fotomandalin_user:${{ secrets.DB_PASSWORD }}@db:5432/fotomandalin
            DIRECT_URL=postgresql://fotomandalin_user:${{ secrets.DB_PASSWORD }}@db:5432/fotomandalin
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            
            # Application
            NODE_ENV=production
            NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
            
            # Payment
            IYZICO_API_KEY=${{ secrets.IYZICO_API_KEY }}
            IYZICO_SECRET_KEY=${{ secrets.IYZICO_SECRET_KEY }}
            IYZICO_BASE_URL=${{ secrets.IYZICO_BASE_URL }}
            
            # AWS S3
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}
            
            # Email
            SMTP_HOST=${{ secrets.SMTP_HOST }}
            SMTP_PORT=${{ secrets.SMTP_PORT }}
            SMTP_USER=${{ secrets.SMTP_USER }}
            SMTP_PASS=${{ secrets.SMTP_PASS }}
            EOL
            
            echo "🛑 Stopping existing containers..."
            docker-compose -f docker-compose.simple.yml --env-file .env.production down || true
            
            echo "🏗️ Building new images..."
            docker-compose -f docker-compose.simple.yml --env-file .env.production build
            
            echo "🚀 Starting services..."
            docker-compose -f docker-compose.simple.yml --env-file .env.production up -d
            
            echo "⏳ Waiting for services..."
            sleep 30
            
            echo "🗄️ Running database migrations..."
            docker-compose -f docker-compose.simple.yml --env-file .env.production exec -T app npx prisma migrate deploy || \
            docker-compose -f docker-compose.simple.yml --env-file .env.production exec -T app npx prisma db push
            
            echo "🧹 Cleaning up..."
            docker image prune -f
            
            echo "✅ Deployment completed!"
            docker-compose -f docker-compose.simple.yml --env-file .env.production ps
          EOF

      - name: 🔍 Health Check
        run: |
          sleep 10
          if curl -f "http://${{ secrets.EC2_HOST }}/api/health"; then
            echo "✅ Application is healthy!"
          else
            echo "❌ Health check failed"
            exit 1
          fi
